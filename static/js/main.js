$(function(){    var setFileInput = $('.imgInput'),    setFileImg = $('.imgView');    setFileInput.each(function(){ // ImgInput classそれぞれについてfunctionを実行        var selfFile = $(this), // selfFile is ImgInputという変数を定義        selfInput = $(this).find('input[type=file]'), // ImgInput classの中のfiletypeのinputをselfInputに格納        prevElm = selfFile.find(setFileImg), // ImgINputの中のimgViewというクラスのものをprevElmという変数に格納        orgPass = prevElm.attr('src'); // imgViewというクラスのsrcという属性の値をorgPassという変数に格納        selfInput.change(function(){ // filetypeのinputに変更が加わった時にfunctionを実行            var file = $(this).prop('files')[0], // fileのinputのfilesというプロパティの値をfileに格納            fileRdr = new FileReader(); // Fileを読み込むインスタンスの作成            if (!this.files.length){ // fileのinputのfileのlengthがなければ，実行                prevElm.attr('src', orgPass); // ImgInputのimgViewのsrc属性の値をimgViewクラスのsrc属性のの値に変更                // つまり，filesの長さがなければ，何もしない．                return;            } else {                if (!file.type.match('image.*')){ // fileのtypeがimageとmatchしていなければ，                    prevElm.attr('src', orgPass); // さっきと同じで何もしない．                    return;                } else { //上記以外なら                    fileRdr.onload = function() { // 読み込みが成功して完了したら，                        prevElm.attr('src', fileRdr.result); // fileのなかみをimgのsrcに書き込む．                    }                    fileRdr.readAsDataURL(file); // fileをDataURLとして読み込む                }            }        });    });});